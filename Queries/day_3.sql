SELECT EMPLOYEES.FIRST_NAME
FROM EMPLOYEES;

SELECT bla.FIRST_NAME
FROM EMPLOYEES bla;

------SQL JOIN-------------
--- IS USED TO GET DATA FROM 2 OR MORE TABLES THAT RELATED TO EACH OTHER
-- PRIMARY KEY AND FOREIGN KEY RELATIONSHIP

----INNER JOIN, LEFT OUTER JOIN, RIGHT OUTER JOIN, FULL OUTER JOIN
--IN ORDER TO JOIN TWO TABLES THAT HAS RELATIONSHIP
--SELECT DESIRED COLUMNS FROM BOTH TABLES
-- FROM TABLE 1
--INNER JOIN TABLE 2 ON THE COMMON COLUMN

SELECT COUNTRIES.COUNTRY_NAME, REGIONS.REGION_NAME
FROM COUNTRIES
INNER JOIN REGIONS ON REGIONS.REGION_ID = COUNTRIES.REGION_ID;

--we can use alias for table to make above query slightly more readable
--nicknames are followed by space and the letter or word
-- you can use nickname to select the columns
--just like you did in java obj.VariableName

SELECT c.COUNTRY_NAME, r.REGION_NAME
FROM COUNTRIES c
INNER JOIN REGIONS r ON c.REGION_ID = r.REGION_ID;

---Find out CITY(LOCATIONS) and country _name (COUNTRIES)
SELECT LOCATIONS.CITY,COUNTRIES.COUNTRY_NAME
FROM LOCATIONS
INNER JOIN COUNTRIES  ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID;

SELECT l.CITY,c.COUNTRY_NAME
FROM LOCATIONS l
INNER JOIN COUNTRIES c  ON l.COUNTRY_ID = c.COUNTRY_ID;

--it does not matter which table comes first
-- when you do inner join
SELECT l.CITY,c.COUNTRY_NAME
FROM COUNTRIES c
         INNER JOIN LOCATIONS l  ON l.COUNTRY_ID = c.COUNTRY_ID;

--Display Department name (department) and city (locations)
SELECT DEPARTMENTS. DEPARTMENT_NAME, LOCATIONS.CITY
FROM LOCATIONS
INNER JOIN DEPARTMENTS ON LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID;

SELECT d.DEPARTMENT_NAME, l.CITY
FROM LOCATIONS l
INNER JOIN DEPARTMENTS d ON l.LOCATION_ID = d.LOCATION_ID;

--DISPLAY FIRST NAME (EMPLOYEES), DEPARTMENT_NAME (DEPARTMENTS)
--THEY ARE ALREADY RELATED BY DEPARTMENT ID

---INNER JOIN WILL RETURN THE DATA THAT MATCH FROM BOTH TABLE
--- IT'S RETURNING ONLY ROWS THAT HAS MATCHING DEPARTMENT_ID FROM BATH TABLE
--- ANYTHING ELSE IS EXCLUDED
--- FOR EXAMPLE : KIMBERLY WITH NO DEPARTMENT ID


SELECT EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON  EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
INNER JOIN DEPARTMENTS  d ON  e.DEPARTMENT_ID = d.DEPARTMENT_ID;

--WE WANT TO DISPLAY FIRST NAME AND DEPARTMENT NAME
--- INCLUDING THOSE THAT DOES NOT HAVE MATCHING DEPARTMENT ID
--LIKE KIMBERLY HAS NULL DEPARTMENT ID BUT WE STILL WANT TO GET THAT DATA.
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
LEFT OUTER JOIN DEPARTMENTS  d ON  e.DEPARTMENT_ID = d.DEPARTMENT_ID;

--- -- WE WANT TO DISPLAY FIRST NAME, DEPARTMENT NAME
--- INCLUDING THOSE DEPARTMENT THAT DOES NOT HAVE ANY MATCHING EMPLOYEES

SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
RIGHT OUTER JOIN DEPARTMENTS  d ON  e.DEPARTMENT_ID = d.DEPARTMENT_ID;


SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
FULL OUTER JOIN DEPARTMENTS  d ON  e.DEPARTMENT_ID = d.DEPARTMENT_ID;

---DISPLAY ALL THE DEPARTMENT NAME(DEPARTMENTS) AND CITY(LOCATIONS)
--INCLUDING THOSE CITY WITH NO DEPARTMENT IN IT

SELECT  DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY
FROM DEPARTMENTS
RIGHT OUTER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID;

---DISPLAY FIRST NAME AND JOB TITLE
SELECT e.JOB_ID,j.JOB_TITLE
FROM EMPLOYEES e
INNER JOIN JOBS j ON e.JOB_ID = j.JOB_ID;

---Display FIRST NAME (EMPLOYEES)
-- AND JOB_TITLE(JOBS)
-- AND DEPARTMENT_NAME (DEPARTMENTS)

SELECT e. FIRST_NAME, j.JOB_TITLE, d.DEPARTMENT_NAME
FROM EMPLOYEES e
INNER JOIN JOBS j ON e.JOB_ID = j.JOB_ID
INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;

---THIS IS THE NO ALIAS VERSION OF SAME QUERY
SELECT EMPLOYEES.FIRST_NAME,
       JOBS.JOB_TITLE,
       DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
INNER JOIN JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

---DISPLAY CITY (LOCATIONS) , COUNTRY_NAME (COUNTRIES), REGION _NAME (REGIONS)
SELECT l.CITY, c.COUNTRY_NAME,r.REGION_NAME
FROM LOCATIONS l
INNER JOIN COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID
INNER JOIN REGIONS r ON c.REGION_ID = r.REGION_ID;

----SELECT e.FIRST NAME, d.dEPARTMENT NAME
SELECT  d.DEPARTMENT_NAME,COUNT(e. FIRST_NAME)
FROM EMPLOYEES e
INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
group by d.DEPARTMENT_NAME;
